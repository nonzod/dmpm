{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{{ attach_library('socialbase/page-node')}}

{%
  set classes = [
    node.isPromoted() ? 'node--promoted',
    not node.isPublished() ? 'node--unpublished',
    'men-node--full',
    'men-node--event'
  ]
%}

{% if details_label %}
  <h4 class="section-title section-title-node">
    {{ details_label }}
  </h4>
{% endif %}

<article{{ attributes.addClass(classes) }}>

  <div{{ content_attributes }}>
    <div class="men-node__title">
      {{ label }}
    </div>

    {% if display_submitted %}
      {% block metainfo %}
        <header class="metainfo">
          {{ content.links.moderation }}
        </header>
      {% endblock %}
    {% endif %}

    {% if not node.isPublished() %}
      <div class="node--unpublished__label">{% trans %} unpublished {% endtrans %}</div>
    {% endif %}

    {% block nodefull_specialfields %}

      <div class="article__special-fields">
        <div class="article__special-field">
          <svg class="article__special-fields-icon"><use xlink:href="#icon-event"></use></svg>
          <span class="sr-only">{% trans %}Event date {% endtrans %}</span>
          <span class="inline-center">
            <strong>{{event_date}}</strong>
          </span>
        </div>
        {% if content.field_event_address|render or content.field_event_location|render %}
          <div class="article__special-field">
            <svg class="article__special-fields-icon"><use xlink:href="#icon-location"></use></svg>
            <span class="sr-only">{% trans %}Event location {% endtrans %}</span>
            <span class="inline-center">
              <strong>{{content.field_event_location}}</strong>
              {% if content.field_event_address|render is not empty and content.field_event_location|render is not empty %} &bullet; {% endif %}
              {{content.field_event_address}}
            </span>
          </div>
        {% endif %}
      </div>

      {% endblock %}

      {% if content.field_slider_images|render %}
        <div class="men-slider__in-content">
          {% for item in node.field_slider_images %}
            <a href="{{ base_path }}{{ file_url(item.entity.uri.value| image_style('lightbox_carousel')) }}">
              <img src="{{ base_path }}{{ file_url(item.entity.uri.value| image_style('widget_carousel')) }}" class="img-responsive" alt="" />
            </a>
          {% endfor %}
        </div>
      {% endif %}

      {% if content.field_link_channel_streaming|render %}
        {% set button_label = content.field_link_channel_streaming.0['#title'] %}
        <div class="clearfix">
          <a href="{{ content.field_link_channel_streaming.0['#url'] }}" class="btn btn-men men-btn__action" target="_blank">
            {% if button_label is not empty %}
              {{ button_label }}
            {% else %}
              {{ 'Link to our Streaming video'|t }}
            {% endif %}
          </a>
        </div>
      {% endif %}

      {% block nodefull_body %}
        {{ content|without('field_event_address','field_event_location', 'field_event_type', 'book_navigation', 'flag_follow_content', 'field_event_an_enroll', 'field_enrollment_status', 'enrolled', 'enrollments_count', 'links', 'ongoing', 'field_event_addtocal', 'field_author', 'field_hide_author', 'field_slider_images', 'field_link_channel_streaming') }}
      {% endblock %}

  </div>

</article>

{% block nodefull_below_content %}
  {{ below_content }}
{% endblock %}
